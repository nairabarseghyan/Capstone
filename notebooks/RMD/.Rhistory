knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggfortify)
library(scales)
library(ggpubr)
library(grid)
library(png)
library(gridExtra)
library(dygraphs)
library(xts)
library(htmlwidgets)
library(magick)
library(paletteer)
library(ggthemes)
library(shadowtext)
library(treemap)
library(tidyverse)
library(rstatix)
library(sf)
library(patchwork)
start_color <- "#0554a4"  # Dark Olive Green
end_color <- "#c90c0f"   # Gold
# Create a color ramp function
custom_color_palette <- colorRampPalette(c(start_color,end_color))
# Generate a palette of 10 colors
default_palette <- custom_color_palette(10)
#color_points <- c("#0554a4", "#999999","#061735","#c90c0f")
start_color <- "#0554a4"  # Dark Olive Green
end_color <- "#c90c0f"   # Gold
# Create a color ramp function
custom_color_palette <- colorRampPalette(c(start_color,end_color))
# Generate a palette of 10 colors
default_palette <- custom_color_palette(10)
#color_points <- c("#0554a4", "#999999","#061735","#c90c0f")
PROJECT_PATH <- "/Users/nairabarseghyan/Desktop/project_name/"
FIGURES_PATH <- "/Users/nairabarseghyan/Desktop/project_name/reports/figures/"
DATA_PATH <- "/Users/nairabarseghyan/Desktop/project_name/data/"
source("./preprocessing.R")
logo <- image_read(paste0(PROJECT_PATH, "data/external/nt_logo.png"))
sales_raw <- read.csv(paste0(DATA_PATH, "processed/sales_whole.csv"))
sales_data_preprocessed <- process_sales_data(sales_raw)
calendar_sales_data <- add_calendar_features(sales_data_preprocessed)
final_sales_data <- add_sales_proxies(calendar_sales_data)
yerevan_shapefile <- st_read(paste0(PROJECT_PATH,"Yerevan-Districts/Yerevan-Districts.shp"))
yerevan_data <- final_sales_data %>%
filter(Districts != "Other Regions") %>%
group_by(Districts) %>%
summarise(Revenue = sum(Revenue_VAT, na.rm = TRUE))
yerevan_map <- merge(yerevan_shapefile, yerevan_data, by.x = "Name_en", by.y = "Districts", all.x = TRUE)
# Plotting the map for Yerevan districts
plot_yerevan <- ggplot(data = yerevan_map) +
geom_sf(aes(fill = Revenue), color = "white", size = 0.5) +
scale_fill_gradientn(colours = custom_color_palette(100), name = "Revenue", labels = label_millions) +
labs(title = "Sales Revenue by District in Yerevan") +
theme_minimal()
label_millions <- function(x) {
ifelse(x >= 1e9, paste0(format(round(x / 1e9, 1), nsmall = 1), "B"),
ifelse(x >= 1e6, paste0(format(round(x / 1e6, 1), nsmall = 1), "M"),
paste0(x)))
}
# Plotting the map for Yerevan districts
plot_yerevan <- ggplot(data = yerevan_map) +
geom_sf(aes(fill = Revenue), color = "white", size = 0.5) +
scale_fill_gradientn(colours = custom_color_palette(100), name = "Revenue", labels = label_millions) +
labs(title = "Sales Revenue by District in Yerevan") +
theme_minimal()
print(plot_yerevan)
grid::grid.raster(logo, x = 0.75, y = 0.005, just = c('left', 'bottom'), width = unit(1, 'inches'))
ggsave(paste0(FIGURES_PATH,"sales_by_map_yerevan.pdf"))
armenia_shapefile <- st_read(paste0(PROJECT_PATH,"Armenia_Marzes/Armenia_Marzes.shp"))
armenia_data <- final_sales_data %>%
filter(Regions != "", Regions != "YEREVAN") %>%
group_by(Regions) %>%
summarise(Revenue = sum(Revenue_VAT, na.rm = TRUE))
armenia_map <- merge(armenia_shapefile, armenia_data, by.x = "Name_Eng", by.y = "Regions", all.x = TRUE)
# Plotting the map for Armenia regions
plot_armenia <- ggplot(data = armenia_map) +
geom_sf(aes(fill = Revenue), color = "white", size = 0.5) +
scale_fill_gradientn(colours = custom_color_palette(100), name = "Revenue", labels = label_millions) +
labs(title = "Sales Revenue by Region in Armenia") +
theme_minimal()
# Print the plot
print(plot_armenia)
grid::grid.raster(logo, x = 0.75, y = 0.005, just = c('left', 'bottom'), width = unit(1, 'inches'))
ggsave(paste0(FIGURES_PATH,"sales_by_map_armenia.pdf"))
armenia_shapefile <- st_read(paste0(PROJECT_PATH,"Armenia_Marzes/Armenia_Marzes.shp"))
armenia_data <- final_sales_data %>%
filter(Regions != "") %>%
group_by(Regions) %>%
summarise(Revenue = sum(Revenue_VAT, na.rm = TRUE))
armenia_map <- merge(armenia_shapefile, armenia_data, by.x = "Name_Eng", by.y = "Regions", all.x = TRUE)
# Plotting the map for Armenia regions
plot_armenia <- ggplot(data = armenia_map) +
geom_sf(aes(fill = Revenue), color = "white", size = 0.5) +
scale_fill_gradientn(colours = custom_color_palette(100), name = "Revenue", labels = label_millions) +
labs(title = "Sales Revenue by Region in Armenia") +
theme_minimal()
# Print the plot
print(plot_armenia)
grid::grid.raster(logo, x = 0.75, y = 0.005, just = c('left', 'bottom'), width = unit(1, 'inches'))
ggsave(paste0(FIGURES_PATH,"sales_by_map_armenia.pdf"))
armenia_shapefile <- st_read(paste0(PROJECT_PATH,"Armenia_Marzes/Armenia_Marzes.shp"))
armenia_data <- final_sales_data %>%
filter(Regions != "", Regions != "YEREVAN") %>%
group_by(Regions) %>%
summarise(Revenue = sum(Revenue_VAT, na.rm = TRUE))
armenia_map <- merge(armenia_shapefile, armenia_data, by.x = "Name_Eng", by.y = "Regions", all.x = TRUE)
# Plotting the map for Armenia regions
plot_armenia <- ggplot(data = armenia_map) +
geom_sf(aes(fill = Revenue), color = "white", size = 0.5) +
scale_fill_gradientn(colours = custom_color_palette(100), name = "Revenue", labels = label_millions) +
labs(title = "Sales Revenue by Region in Armenia") +
theme_minimal()
# Print the plot
print(plot_armenia)
grid::grid.raster(logo, x = 0.75, y = 0.005, just = c('left', 'bottom'), width = unit(1, 'inches'))
ggsave(paste0(FIGURES_PATH,"sales_by_map_armenia.pdf"))
